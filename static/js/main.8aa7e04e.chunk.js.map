{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContetn","Header","Container","props","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aa7e04e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTask}) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\nconst onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const trimNewTaskContent= newTaskContent.trim()\r\n    if (!trimNewTaskContent) {\r\n        return;\r\n    }\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n};\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item ${task.done && hideDone ? \" tasks__item--hidden\" : \"\"}`}>\r\n                <button className=\"tasks__button\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </button>\r\n                <span className={`tasksContent ${task.done ? \"tasksContent--done\" : \"\"}`}>{task.content}\r\n                </span>\r\n                <button className=\" tasks__buttonRemove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >ðŸ—‘</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button onClick={toggleHideDone} className=\"buttons__button\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </button>\r\n                <button\r\n                    onClick={() => setAllDone()}\r\n                    className=\"buttons__button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContetn}) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__container\">\r\n            <h2 className=\"section__header\">{title}</h2>\r\n            {extraHeaderContetn}\r\n        </div>\r\n       {body}\r\n    </section>\r\n);\r\n\r\nexport default Section\r\n","\r\n\r\nconst Header = ({title}) => (\r\n<header className=\"header\">\r\n<h1>{title}</h1>\r\n</header>\r\n);\r\n\r\nexport default Header","import \"./style.css\";\r\n\r\nconst Container = (props) => (\r\n    <main className= \"container\">{props.children}</main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\n\nfunction App() {\n    const [hideDone, setHideDone] = useState(false);\n    const [tasks, setTasks] = useState([\n    ]);\n\n    const toggleHideDone = () => {\n        setHideDone(hideDone => !hideDone);\n    };\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(task => tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, done: !task.done };\n            }\n            return task;\n        }));\n    }\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\n    };\n\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n            },\n        ]);\n    };\n\n    return (\n        <Container>\n            <Header title=\"Lista zadaÅ„\" />\n\n            <Section title=\"Dodaj nowe zadanie\"\n                body={<Form\n                    addNewTask={addNewTask}\n                />}\n            />\n            <Section\n                title=\"Lista zadaÅ„\"\n                body={<Tasks tasks={tasks}\n                    hideDone={hideDone}\n                    removeTask={removeTask}\n                    toggleTaskDone={toggleTaskDone}\n                />}\n                extraHeaderContetn={\n                    <Buttons tasks={tasks}\n                        hideDone={hideDone}\n                        toggleHideDone={toggleHideDone}\n                        setAllDone={setAllDone}\n                    />} />\n        </Container>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}